package mop;

import java.lang.*;
import java.lang.*;
import com.runtimeverification.rvmonitor.java.rt.RVMLogging;
import com.runtimeverification.rvmonitor.java.rt.RVMLogging.Level;

/**
 * Warns if one registers a new shutdown hook after the shutdown sequence has begun.
 * 
 * According to the manual, "Once the shutdown sequence has begun it is impossible 
 * to register a new shutdown hook or de-register a previously-registered hook." 
 * http://docs.oracle.com/javase/6/docs/api/java/lang/Runtime.html
 *
 * @severity error
 */
ShutdownHook_LateRegister() {
	HashSet<Thread> threadSet = new HashSet<Thread>();

	creation event register after(Thread t) : call(* Runtime+.addShutdownHook(..)) && args(t) {
		threadSet.add(t);
	}
	creation event unregister after(Thread t) : call(* Runtime+.removeShutdownHook(..)) && args(t) {
		threadSet.remove(t);
	}
	event start after(Thread t) : startThread() && thread(t) && condition(threadSet.contains(t)) {
	}

	ere : (register | unregister)* start+ (register | unregister)
	
	@match {
		RVMLogging.out.println(Level.CRITICAL, __DEFAULT_MESSAGE);
		RVMLogging.out.println(Level.CRITICAL, "A shutdown hook was registered/unregister after the shutdown sequence had begun.");
	}
}

