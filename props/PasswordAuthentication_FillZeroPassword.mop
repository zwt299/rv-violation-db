package mop;

import java.net.*;
import com.runtimeverification.rvmonitor.java.rt.RVMLogging;
import com.runtimeverification.rvmonitor.java.rt.RVMLogging.Level;

/**
 * Warns if the password obtained from PasswordAuthentication.getPassword() is
 * not zeroed out.
 *
 * It is caller's responsibility to zero out the password information,
 * obtained from PasswordAuthentication.getPassword(), after it is no longer
 * needed.
 * http://docs.oracle.com/javase/6/docs/api/java/net/PasswordAuthentication.html#getPassword%28%29
 *
 * This specification warns if the password is obtained but never zeroed out
 * using Arrays.fill(). It may raise false alarms if a client zeroes the
 * password buffer using other methods.
 *
 * @severity warning
 */
PasswordAuthentication_FillZeroPassword(Object pwd) {
	event read after() returning(Object pwd) :
		call(char[] PasswordAuthentication+.getPassword(..)) {}
	event obliterate before(Object pwd) :
		call(* Arrays.fill(char[], char)) && args(pwd, ..) {}
	event endProg before() : endProgram() {}
	
	ltl : [](read => o obliterate)

	@violation {
		RVMLogging.out.println(Level.CRITICAL, __DEFAULT_MESSAGE);
		RVMLogging.out.println(Level.CRITICAL, "The password, obtained from PasswordAuthentication.getPassword(), has never been obliterated.");
	}
}

