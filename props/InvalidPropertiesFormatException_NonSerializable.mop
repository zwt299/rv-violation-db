package mop;

import java.util.*;
import java.io.*;
import com.runtimeverification.rvmonitor.java.rt.RVMLogging;
import com.runtimeverification.rvmonitor.java.rt.RVMLogging.Level;

/**
 * Warns if an InvalidPropertiesFormatException object is being serialized or
 * deserialized.
 *
 * Although InvalidPropertiesFormatException inherits Serializable the
 * interface from Exception, it is not intended to be Serializable and
 * serialization methods are implemented to throw NotSerializableException.
 * http://docs.oracle.com/javase/6/docs/api/java/util/InvalidPropertiesFormatException.html
 *
 * This property warns if an InvalidPropertiesFormatException object is passed
 * to ObjectOutputStream.writeObject() as an argument. This property misses
 * errors because writeObject() can be indirectly called inside of JDK. Also,
 * it cannot detect whether or not ObjectInputStream.readObject() attempted to
 * deserialize an InvalidPropertiesFormatException object because a correct
 * implementation of InvalidPropertiesFormatException.readObject() always
 * throws an exception and there is no way to detect the type that was
 * attempted.
 *
 * @severity error
 */

InvalidPropertiesFormatException_NonSerializable() {
	event serialize before(ObjectOutputStream out, InvalidPropertiesFormatException obj) :
		call(* ObjectOutputStream+.writeObject(..)) &&
		target(out) && args(obj) {
		RVMLogging.out.println(Level.CRITICAL, __DEFAULT_MESSAGE);
		RVMLogging.out.println(Level.CRITICAL, "InvalidPropertiesFormatException is not intended to be Serialized.");
	}

	event deserialize after(ObjectInputStream in) returning(InvalidPropertiesFormatException obj) :
		call(* ObjectInputStream+.readObject(..)) && target(in) {
		RVMLogging.out.println(Level.CRITICAL, __DEFAULT_MESSAGE);
		RVMLogging.out.println(Level.CRITICAL, "InvalidPropertiesFormatException is not intended to be Serialized.");
	}
}

