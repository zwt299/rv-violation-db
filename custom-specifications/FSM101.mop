package mop;

import com.runtimeverification.rvmonitor.java.rt.RVMLogging;
import com.runtimeverification.rvmonitor.java.rt.RVMLogging.Level;

import java.util.concurrent.Future;

FSM101(Future f) {

  event event_1 after(Future f):
    call(* Future.isDone()) && target(f) {}

  event event_2 after(Future f):
    call(* Future.isCancelled()) && target(f) {}

  event event_3 after(Future f):
    call(* Future.cancel(boolean)) && target(f) {}

  fsm :
        state0 [
          event_1 -> state3
        ]

        state1 [
          event_3 -> state1
          event_2 -> state2
          event_1 -> state3
        ]

        state2 [
          event_1 -> state3
          event_2 -> state2
          event_3 -> state1
        ]

        state3 [
          event_3 -> state1
          event_1 -> state3
          event_2 -> state2
        ]

  @fail {
         RVMLogging.out.println(Level.CRITICAL, __DEFAULT_MESSAGE);
         RVMLogging.out.println(Level.CRITICAL, "FSM101 went into an error state.");
         __RESET;
  }
}