Violation_ID,Propfile,TestDirectory,Test,ViolationFile,LineNum,Classification,Notes,
617,Collections_SynchronizedCollection,,,./src/main/java/org/apache/commons/lang3/CharSet.java,240,Truebug,In this case set is being accesed without using synchronized in the contains method,
618,Iterator_HasNext,,,./src/main/java/org/apache/commons/lang3/ClassUtils.java,1435,Truebug,The nextSuperClass field calls next() without checking if hasnext exists leading to potential buggy behavior--especially since the method that calls a function that uses this potential null pointer calls a method,
619,Iterator_HasNext,,,./src/main/java/org/apache/commons/lang3/ThreadUtils.java,223,Falsealarm,Potential issue with spec imprecision-- isEmpty() is called in exchange for hasNext-- which semantially should behave the same,
620,Iterator_HasNext,,,./src/main/java/org/apache/commons/lang3/reflect/MethodUtils.java,806,Falsealarm,In the context of where this is being called i'd argue it is a false alarm (comment from devs //skip the declaring class :P) when .next() is called here there is guaranteed to be an element in the iterator,
621,ListIterator_hasNextPrevious,,,./src/main/java/org/apache/commons/lang3/text/StrTokenizer.java,517,Falsealarm,hasnext is being overriden here next invokes hasnext in this context.
622,Iterator_HasNext,,,./src/main/java/com/asana/iterator/ItemIterator.java,19,Falsealarm,overriden hasNext -- there is no apparent call to next that happens before hasnext here anyways,
623,Iterator_HasNext,,,./src/main/java/com/asana/iterator/ItemIterator.java,25,Falsealarm,overriden hasNext -- not using built in,
624,Iterator_HasNext,,,./src/main/java/com/asana/iterator/ItemIterator.java,27,Falsealarm,overriden hasNext,
625,ByteArrayOutputStream_FlushBeforeRetrieve,,,./src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java,78,Falsealarm,overriden for custom implementation,
626,ByteArrayOutputStream_FlushBeforeRetrieve,,,./src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java,79,Falsealarm,overriden for custom implementation,
627,ByteArrayOutputStream_FlushBeforeRetrieve,,,./src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java,106,Falsealarm,overriden for custom implementation,
628,ByteArrayOutputStream_FlushBeforeRetrieve,,,./src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java,128,Falsealarm,overriden for custom implementation,
629,Iterator_HasNext,,,./src/main/java/org/apache/commons/codec/language/bm/Languages.java,102,Truebug,iterator().next being called without hasnext check on a base collection,
630,Iterator_HasNext,,,./src/main/java/org/apache/commons/codec/language/bm/PhoneticEngine.java,451,Falsealarm/HardToInspect,while iterator.hasNext() isn't called before next- the special context of this code makes me unlikely to believe a bug would be caused here primarily because two lists are working in tandem with this implementation where one list adds all elements to the other and the condition that exists before next checks to see if the other list (the one being added to) has a size of 1 which would imply that the original list whose iterator calls next should also have a size of 1,
631,OutputStream_ManipulateAfterClose,,,./src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java,78,Falsealarm,custom implementation that overrides existing close,
632,OutputStream_ManipulateAfterClose,,,./src/main/java/org/apache/commons/codec/binary/BaseNCodecOutputStream.java,106,Falsealarm,N/A,
633,Closeable_MultipleClose,,,./src/main/java/org/apache/commons/exec/DefaultExecutor.java,319,Falsealarm,Not really even sure why this was flagged--two seperate streams are closed (only tie to this might be error in 362),
634,Closeable_MultipleClose,,,./src/main/java/org/apache/commons/exec/StreamPumper.java,115,Falsealarm,There appears to only be one close being called -- again not really sure why this is flagged,
635,OutputStream_ManipulateAfterClose,,,./src/main/java/org/apache/commons/exec/PumpStreamHandler.java,199,Falsealarm,Flush seems to occur here before any close,
636,OutputStream_ManipulateAfterClose,,,./src/main/java/org/apache/commons/exec/StreamPumper.java,108,Falsealarm,Any writes in this function occur before closing...,
637,Closeable_MultipleClose,,,./src/main/java/org/apache/commons/fileupload2/FileUploadBase.java,874,Falsealarm,Only one close in method body,
638,Closeable_MultipleClose,,,./src/main/java/org/apache/commons/fileupload2/MultipartStream.java,950,Falsealarm,Invokes a close function call that is public--close is overriden--doesn't seem like a likely bug,
639,InputStream_ManipulateAfterClose,,,./src/main/java/org/apache/commons/fileupload2/MultipartStream.java,969,Falsealarm,Stream is customized--using available() after closing the input happens in an if else branch--possibly flagged by method header,
640,Closeable_MultipleClose,,,./src/main/java/org/apache/commons/net/tftp/TFTPServer.java,486,Unclassified,N/A,??????????????
641,Iterator_RemoveOnce,,,./src/main/java/org/apache/commons/net/ftp/parser/VMSVersioningFTPEntryParser.java,145,Falsealarm,While call to hasNext doenst happen--call to hasPrevious does--seems unlikely to be bug here,
642,StringTokenizer_HasMoreElements,,,./src/main/java/org/apache/commons/net/ftp/parser/VMSFTPEntryParser.java,171,Falsealarm,countTokens called--same difference in functionality,
643,StringTokenizer_HasMoreElements,,,./src/main/java/org/apache/commons/net/ftp/parser/VMSFTPEntryParser.java,174,Falsealarm,countTokens called--same difference in functionality,
644,Arrays_SortBeforeBinarySearch,,,./src/main/java/org/apache/commons/validator/routines/DomainValidator.java,2309,Falsealarm/HardToInspect,In this case while the spec may indicate an error it does seem that the callers are aware of this as they are passing an argument named sortedArray--provided that invokers agree to their own specification this seems like a falsealarm they are likely avoiding resorting here but there might be a possible error,
645,Iterator_HasNext,,,./src/main/java/com/google/testing/compile/TreeDiffer.java,276,Falsealarm,!isEmpty used in place for hasNext,
646,Iterator_HasNext,,,./src/main/java/com/google/testing/compile/TreeDiffer.java,278,Falsealarm,!isEmpty used in place for hasNext,
647,Iterator_HasNext,,,./src/main/java/com/google/testing/compile/TypeEnumerator.java,99,Falsealarm,isEmpty used in place for hasNext,
648,Iterator_HasNext,,,./src/main/java/com/google/testing/compile/TypeEnumerator.java,87,Falsealarm,AssertionError gets thrown in the case where container doesn't have at least one element,
649,Iterator_HasNext,,,./src/main/java/com/esotericsoftware/yamlbeans/YamlReader.java,344,HardToInspect -- likely Truebug,The logic for this function is very obfuscated -- would suggest check here because it is hard to follow and might be hard to maintain,
650,Iterator_HasNext,,,./src/main/java/com/esotericsoftware/yamlbeans/emmitter/Emmitter.java,113,HardToInspect -- likely Falsealarm,It seems like it might be good to have a hasNext check for the first call to next but it also seems like the developers are very conscious about their development here,
651,Iterator_HasNext,,,./src/main/java/com/esotericsoftware/yamlbeans/emmitter/Emmitter.java,114,Falsealarm,hasNext before invoking next using a loop--seems fine to me,
652,Reader_ManipulateAfterClose,,,./src/main/java/com/esotericsoftware/yamlbeans/tokenizer/Tokenizer.java,237,Falsealarm,Guarded withing try catch--it seems the devs know that it is possible that this read occures after closing something,
653,ByteArrayOutputStream_FlushBeforeRetrieve,,,./src/main/java/org/joda/beans/ser/bin/JodaBeanBinWriter.java,151,Truebug,ByteArrayOutputStream not flushed before the byte array is retrieved-leaving potential for error,
654,StringTokenizer_HasMoreElements,,,./src/main/java/org/joda/time/tz/ZoneInfoCompiler.java,714,Falsealarm,countTokens called to check for more elements beforehand,
655,StringTokenizer_HasMoreElements,,,./src/main/java/org/joda/time/tz/ZoneInfoCompiler.java,853,HardToInspect -- likely Falsealarm,N/A,It seems like while it might be good to call hasMoreTokens here I don't think it is a necessity because of how objects are being created in this class,
656,StringTokenizer_HasMoreElements,,,./src/main/java/org/joda/time/tz/ZoneInfoCompiler.java,859,HardToInspect -- likely Falsealarm,N/A,It seems like while it might be good to call hasMoreTokens here I don't think it is a necessity because of how objects are being created in this class,
657,Iterator_HasNext,,,./src/main/java/org/jscep/client/inspect/AbstractCertStoreInspector.java,81,Falsealarm,size used to enforce that there is a next element,
658,Closeable_MultipleClose,,,./src/main/java/net/javacrumbs/json2xml/JsonXmlHelper.java,88,Falsealarm,Not even an object to close in the specified hash for this file?,
659,Closeable_MultipleClose,,,./src/main/java/com/maxmind/geoip/LookupService.java,398,Falsealarm,file closed only once overloaded notation for close,
660,Closeable_MultipleClose,,,./src/main/java/com/netcetera/trema/core/exporting/JsonExporter.java,105,Falsealarm,No closing is even done in this file,
661,Closeable_MultipleClose,,,./src/main/java/com/netcetera/trema/core/importing/XLSFile.java,56,Falsealarm,Only one close being done here--not sure why this gets flagged--looks fine to me,
662,OutputStream_ManipulateAfterClose,,,./src/main/java/com/netcetera/trema/core/exporting/JsonExporter.java,104,Falsealarm,The outputstream being used is created in the line before and not closed before writing to it,
663,ByteArrayOutputStream_FlushBeforeRetrieve,,,./src/main/java/com/venky/core/util/ObjectUtil.java,79,Truebug,Flush before retrieving baos toByteArray,
664,Closeable_MultipleClose,,,./src/main/java/com/venky/cache/Store.java,58,Falsealarm,close method invokes .close -- seems fine to me,
665,Closeable_MultipleClose,,,./scr/main/java/com/hp/autonomy/frontend/configuration/BaseConfigFileService.java,105,Falsealarm,This is related to IOException handling which seems irrelevant to this spec?,
666,Closeable_MultipleClose,,,./scr/main/java/com/hp/autonomy/frontend/configuration/BaseConfigFileService.java,131,Falsealarm,This is related to IOException handling which seems irrelevant to this spec?,
667,Closeable_MultipleClose,,,./scr/main/java/com/hp/autonomy/frontend/configuration/BaseConfigFileService.java,278,Falsealarm,This is related to IOException handling which seems irrelevant to this spec?,
668,StringTokenizer_HasMoreElements,,,./src/main/java/org/codehaus/mojo/jaxb2/shared/environment/locale/LocaleFacet.java,121,Falsealarm,countTokens used here instead of hasMoreTokens,
669,StringTokenizer_HasMoreElements,,,./src/main/java/org/codehaus/mojo/jaxb2/shared/version/DependsFileParser.java,215,Falsealarm,countTokens used here instead of hasMoreTokens,
670,StringTokenizer_HasMoreElements,,,./src/main/java/org/codehaus/mojo/jaxb2/shared/version/DependsFileParser.java,174,Falsealarm,countTokens used here instead of hasMoreTokens,